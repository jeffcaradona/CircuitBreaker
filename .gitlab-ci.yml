variables:
  SONAR_HOST_URL: "${SONAR_HOST_URL}"   # Replace with your SonarQube server URL
  SONAR_TOKEN: "${SONAR_TOKEN}"                      # Set this token in GitLab CI/CD variables

stages:
  - test
  - sonarqube
  - publish


test:
  stage: test
  image: node:22
  script:
    - npm install
    - npm run coverage
  artifacts:
    paths:
      - coverage/

sonarqube-check:
  stage: sonarqube
  image: node:22  # Use Node.js 22 to meet SonarQube requirements
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
    SONAR_HOST_URL: "http://dev-sonar.irrational.cc"   # Replace with your SonarQube server URL
    SONAR_TOKEN: "${SONAR_TOKEN}"                      # Ensure this token is set in GitLab CI/CD variables
#  cache:
#    key: "${CI_JOB_NAME}"
#    paths:
#      - .sonar/cache
  before_script:
    - npm install -g sonarqube-scanner
    - mkdir -p .sonar/_tmp
    - chmod -R 777 .sonar   # Ensure the directory is writable
    - npm install -g sonarqube-scanner  # Install SonarScanner globally
  script:
    - sonar-scanner -X                  # Run with debug logging enabled
  allow_failure: true
  only:
    - dev-release
    - develop
  dependencies:
    - test


#  PUBLISH TO VERDACCIO STAGE
publish:
  stage: publish
  image: node:22
  script:
    - npm config set registry https://dev-verdaccio.irrational.cc
    - npm config set strict-ssl false
    - echo "//dev-verdaccio.irrational.cc/:_authToken=${NPM_AUTH_TOKEN}" > ~/.npmrc
    - npm version prerelease --preid=${CI_PIPELINE_ID} --no-git-tag-version  # Append pipeline ID as pre-release
    - npm publish --registry https://dev-verdaccio.irrational.cc
  only:
    - dev-release
  dependencies:
    - test


