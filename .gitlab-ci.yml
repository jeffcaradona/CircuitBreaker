image:
  name: sonarsource/sonar-scanner-cli:11
  entrypoint: [""]

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
  GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task

stages:
  - test
  - build-sonar
  - publish-dev-release

test:
  stage: test
  image: node:22
  script:
    - npm install
    - npm run coverage
  artifacts:
    paths:
      - coverage/

build-sonar:
  stage: build-sonar
  image: sonarsource/sonar-scanner-cli:11
  before_script:
    - apt-get update && apt-get install -y nodejs npm
  cache:
    policy: pull-push
    key: "sonar-cache-$CI_COMMIT_REF_SLUG"
    paths:
      - "${SONAR_USER_HOME}/cache"
      - sonar-scanner/
  script:
    - sonar-scanner -Dsonar.host.url="${SONAR_HOST_URL}"
  allow_failure: true
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == 'dev-release'
    - if: $CI_COMMIT_BRANCH == 'develop'
    - if: $CI_COMMIT_BRANCH == 'main'

publish:
  stage: publish-dev-release
  image: node:22
  script:
    - npm config set registry https://dev-verdaccio.irrational.cc
    - npm config set strict-ssl false
    - echo "//dev-verdaccio.irrational.cc/:_authToken=${NPM_AUTH_TOKEN}" > ~/.npmrc

    # Extract the current version from package.json
    - VERSION=$(node -p "require('./package.json').version")

    # Append the CI_PIPELINE_ID to create the pre-release version
    - PRE_RELEASE_VERSION="${VERSION}-${CI_PIPELINE_ID}"

    # Update package.json with the new pre-release version without creating a git tag
    - npm version "${PRE_RELEASE_VERSION}" --no-git-tag-version

    # Publish to Verdaccio with the modified version
    - npm publish --registry https://dev-verdaccio.irrational.cc
  only:
    - dev-release
  dependencies:
    - test
